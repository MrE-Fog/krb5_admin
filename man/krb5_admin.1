.\"
.\"
.\" Blame: Roland Dowdeswell <elric@imrryr.org>
.Dd May 28, 2009
.Os
.Dt KRB5_ADMIN 1
.Sh NAME
.Nm krb5_admin
.Nd kerberos administration tool
.Sh SYNOPSIS
.Nm
.Op Fl JMdlv
.Op Fl D Ar kdb
.Op Fl S Ar sqlitedb
.Op Fl h Ar hostspec
.Op Fl r Ar REALM
.Ar command Ar arg Oo Ar arg ... Oc
.Sh DESCRIPTION
.Nm
is used to make modifications to the Kerberos database, either remotely
via the
.Xr krb5_admind 8
daemon, or locally (with the
.Fl l
flag.)
.Pp
The options are as follows:
.Bl -tag -width indentxxxxxx
.It Fl D Ar kdb
specifies the location of the Kerberos DB when running against a local
database.
Defaults to the location built into the Kerberos libriares.
Implies
.Fl l .
.It Fl J
output is JSON formatted rather than human readable.
.It Fl M
connect to the master KDC rather than a slave.
.It Fl S Ar sqlitedb
specifies the location of the sqlite3 adjunct database where
.Nm
stores its additional schemas.
Can only be used if running against a local database.
.It Fl d
print debugging output.
.It Fl h Ar hostspec
connect to
.Ar hostspec
instead of searching for KDCs using the usual method.
A
.Ar hostspec
has a format of
.Oo Ar service@ Oc Ns Ar hostname Ns Oo : Ns Ar port Oc .
.It Fl r Ar REALM
connect to one of the KDCs for realm
.Ar REALM .
.It Fl l
operate on the local Kerberos DB.
.It Fl v
make the output a bit more verbose.
.El
.Pp
If no
.Ar command
is provided on the command line,
.Nm
will prompt for commands to process.
.Pq This behaviour is deprecated as the quoting is sub-optimal.
.Pp
The remaining arguments to
.Nm
are accepted from the shell and no further quoting is performed.
The first argument is considered to be the command and the remaining
arguments are passed to the command.
Some commands accept a list of key value pairs starting after a
particular position.
Some keys are denoted as ``set-based'' meaning that they manage a
set of values rather than an individual setting.
Set-based keys take a comma-separated list of values
.Pq interpreted as a set
and can also
take plus equals
.Pq +=
or minus equals
.Pq -=
to add or subtract elements from the set.
.Pp
Authorisation to make a change is checked both before and after any action.
If the owernsip is changed such that the actor may not revert the change,
then the change is not allowed.
This means that you cannot relinquish access to any of the objects that
.Nm
manages.
This has the nice property that the user can always undo any action
that they just performed.
The downside is that transferring ownership becomes a two step
process where the original owner adds a new owner and then the new
owner removes the old owner.
.Pp
General commands:
.Bl -ohang -offset ind
.It master
outputs the name of the master KDC.
Note, this will actually connect to the master KDC and will fail if
the master KDC is unavailable.
.El
.Pp
.Ss Principals and Appids
Principals are simply principals stored in the Kerberos DB.
Appids are non-human identities used to run batch jobs.
Appids are both a Kerberos principal and some ancilliary data which
is used to enable their management.
.Pp
The following keys are defined for all principals: princ_expire_time,
pw_expiration, max_life, max_renewable_life, and attributes.
The following keys are also defined for appids:
owner
.Pq set-based ,
desc,
cstraint
.Pq set-based .
.Pp
Commands that operate on principals and appids:
.Pp
.Bl -ohang -offset ind
.It list Op Ar glob
will list the principals that match the
.Ar glob .
.It query Ar princ
will display the principal
.Ar princ .
.It mquery Ar glob Op Ar glob Ar ...
Outputs a list of principals.
.It remove Ar princ
will remove the principal
.Ar princ .
.It enable Ar princ
will enable the principal
.Ar princ
by removing the attribute
.Fl allow_tix .
.It disable Ar princ
will disable the principal
.Ar princ
by adding the attribute
.Fl allow_tix .
.It create_appid Ar princ Op Ar key=val ...
will create a principal for use by automated processes.
This principal will have no assigned passwd and will have a default
owner set to the calling user.
The key value pairs are the same as for
.Ar modify .
.It create_user Ar princ
will create a principal with a random temporary password which is printed
to stdout. The password must be reset by the user via
.Xr kpasswd 1 .
.It reset_passwd Ar princ
will reset the password of a principal to a random temporary password
which is printed to stdout. The password must be reset by the user via
.Xr kpasswd 1 .
.It modify Ar princ Oo Ar key=val ... Oc
will modify a principal or its associated attributes.
.It is_owner Ar princ Ar appid
tests whether
.Ar princ
is one of the owners of
.Ar appid .
This test follows group membership.
There is no output, the return value is set.
.El
.Pp
.Ss Policies
Commands that operate on policies:
.Bl -ohang -offset ind
.It listpols Op Ar glob
will list the policies that match
.Ar glob .
.El
.Pp
.Ss Subjects and Groups
Subjects are simply a list of allowable principals which can be used
in ownerships relationships.
.Nm
ensures that all users and appids that are created will have an associated
krb5 subject in the database, but if you want to refer to principals in
foreign realms in your ownership relationships then you will need to add
them using
.Ar create_subject .
.Pp
Groups are just groups of subjects.
Groups can contain either krb5 principals or other groups nested to
sixteen
.Pq 16
levels.
Groups are simply subjects where the type is
.Dq group
and they are allowed to have
.Dq members .
The commands
.Ar create_group ,
.Ar modify_group ,
etc. are equivalent to their _subject variants except that they set
type=group automatically.
.Pp
The following keys are defined for subjects: type, owner 
.Pq set-based ,
and member
.Pq set-based .
.Pp
Commands that operate on subjects:
.Pp
.Bl -ohang -offset ind
.It create_subject Ar subj No type= Ns Ar type Op No key= Ns Ar val No ...
will create a subject
.Ar subj
of type
.Ar type .
.It list_subject Op No key= Ns Ar val No ...
will list all of the subjects which satisfy the conditions specified.
.It modify_subject Ar subj Op No key= Ns Ar val No ...
will modify the attributes of a subject.
.It query_subject Ar subj Op field ...
will display the fields of
.Ar subj .
If the optional field parameters are supplied then only the fields
specified will be displayed.
If only one optional field parameter is supplied then the output will
be a newline separated list of values.
.It remove_subject Ar subj
will remove
.Ar subj .
.El
.Pp
Commands that operate on groups:
.Bl -ohang -offset ind
.It create_group Ar group No type= Ns Ar type Op No key= Ns Ar val No ...
will create a group
.Ar group
of type
.Ar type .
.It list_group Op No key= Ns Ar val No ...
will list all of the groups which satisfy the conditions specified.
.It modify_group Ar group Op No key= Ns Ar val No ...
will modify the attributes of a group.
.It query_group Ar group Op field ...
will display the fields of
.Ar group .
If the optional field parameters are supplied then only the fields
specified will be displayed.
.It remove_group Ar group
will remove
.Ar group .
.El
.Ss Hosts
.Nm
needs to keep track of all of the hosts in an environment.
This information is used to support bootstrapping of initial
credentials and for the deployment of prestashed tickets.
.Pp
The following keys are defined for all hosts: realm, ip_addr,
bootbinding, and owner
.Pq set-based .
.Pp
Commands that operate on hosts:
.Pp
.Bl -ohang -offset ind
.It create_host Ar host No realm= Ns Ar REALM Op No key=val ...
Create a host in the krb5_admin database with the given realm and
bootbinding.
The realm is used for prestashed ticket access control and is a
required parameter.
The remaining key value pairs are the same as for
.Ar modify_host .
.It create_logical_host Ar host
Create a logical host.
This commands works the same as
.Ar create_host
except the host created is marked as a logical host which means that
it is either an alias to an existing host or a cluster of hosts.
.It bind_host Ar host Ar principal
Bind an existing
.Ar host
to the given
.Ar principal ,
this entitles the host to negotiate its initial keys.
This function can also be accomplished using
.Dq Nm Ar modify_host Ar host Ar bootbinding= Ns Ar princ .
This function may have different authorisation rules, though.
.It remove_host Ar host
Remove
.Ar host .
.It modify_host Ar host Op No key=val ...
will modify the attributes of a host.
.It query_host Ar host Op field ...
will display the fields of
.Ar host .
If the optional field parameters are supplied then only the fields
specified will be displayed.
If only one optional field parameter is supplied then the output will
be a newline separated list of values.
.El
.Ss Labels
Lables are placed on hosts to help constrain where prestashed tickets
are allowed to be placed.
When tickets are asked to be placed on a host via
.Xr krb5_prestash ,
it is required that the host has a label matching each of the
.Dq cstraints
defined for the appid.
These commands are simply to manage the list of acceptable labels,
to actually set labels on hosts see the
.Dq Hosts
sub-section and to set
the
.Dq cstraints
on an appid see the
.Dq Principals and Appids
sub-section.
.Pp
The following commands work on labels:
.Bl -ohang -offset ind
.It add_label
adds
.Ar label .
.It del_label
removes
.Ar label .
.It list_labels
lists all of the valid labels.
.El
.Ss Features
Features are simply a set of flags defined in the
.Nm
database which can be tested by clients to determine if certain
features have been enabled at a site.  No generic features have been
defined, yet.
.Pp
Commands that operate on ``features'':
.Bl -ohang -offset ind
.It add_feature Ar feature
Adds a ``feature'' flag.
.It del_feature Ar feature
Deletes a ``feature'' flag.
.It has_feature Ar feature
Check to see if ``feature'' is present, i.e. has been added.
.El
.Ss SACLS
SACLS are Simple Access Control Lists.
SACLS are usually used to provide administrative access to certain
functions in
.Nm .
When a SACL is set for a principal, the principal can execute the
command with any arguments.
Because of this, these are a heavy hammer which should be used with
some level of discretion and they are designed mainly for either
administrators or synchronisation jobs which source information
such as host names from an upstream source.
.Pp
Commands that operate on SACLS:
.Bl -ohang -offset ind
.It sacls_add Ar verb Ar actor
grants
.Ar verb
to
.Ar actor .
.It sacls_del Ar verb Ar actor
revokes
.Ar verb
from
.Ar actor .
.It sacls_query
lists all of the SACLS.
.El
.Sh EXIT STATUS
The
.Nm
utility normally exits 0 on success, and exits 1 on failure.
.Sh EXAMPLES
To create an appid
.Ar webserver :
.Bd -literal
	$ krb5_admin create_appid webserver
.Ed
.Pp
To add
.Ar elric@IMRRYR.ORG
to the list of owners of the appid
.Ar webserver :
.Bd -literal
	$ krb5_admin modify webserver owner+=elric@IMRRYR.ORG
.Ed
.Pp
To list all of the principals that begin with web:
.Bd -literal
	$ krb5_admin list web\\*
.Ed
.Pp
Show a host:
.Bd -literal
	$ krb5_admin query_host foo.example.com
.Ed
.Pp
To change the owners of a host:
.Bd -literal
	$ krb5_admin modify_host foo.example.com owner+=elric@IMRRYR.ORG
	$ krb5_admin modify_host foo.example.com owner-=yyrkoon@IMRRYR.ORG
.Ed
.Pp
.Sh SEE ALSO
.Xr knc 1 ,
.Xr krb5_admind 8 ,
.Xr krb5_keytab 8 ,
.Xr krb5_prestash 1 .
